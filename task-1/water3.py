def initial_state():
    return (8, 0, 0)


def is_goal(s):
    return s == (4, 4, 0)


def successors(s):
    x, y, z = s

    if (s == (8, 0, 0)):
        return [((3, 5, 0), 5), ((5, 0, 3), 3)]
    if (s == (3, 5, 0)):
        return [((0, 5, 3), 3), ((3, 2, 3), 3), ((8, 0, 0), 5)]
    if (s == (5, 0, 3)):
        return [((0, 5, 3), 5), ((5, 3, 0), 3), ((8, 0, 0), 3)]
    if (s == (0, 5, 3)):
        return [((5, 0, 3), 5), ((3, 5, 0), 3)]
    if (s == (3, 2, 3)):
        return [((6, 2, 0), 3), ((5, 0, 3), 2), ((3, 5, 0), 3), ((0, 5, 3), 3)]
    if (s == (5, 3, 0)):
        return [((2, 3, 3), 3), ((8, 0, 0), 3), ((5, 0, 3), 3), ((3, 5, 0), 2)]
    if (s == (6, 2, 0)):
        return [((3, 2, 3), 3), ((6, 0, 2), 2), ((8, 0, 0), 2), ((3, 5, 0), 3)]
    if (s == (6, 0, 2)):
        return [((1, 5, 2), 5), ((6, 2, 0), 1), ((8, 0, 0), 2), ((1, 5, 2), 5)]
    if (s == (2, 3, 3)):
        return [((5, 0, 3), 3), ((2, 5, 1), 2), ((5, 3, 0), 3), ((0, 5, 3), 2)]
    if (s == (1, 5, 2)):
        return [((6, 0, 2), 5), ((3, 5, 0), 2), ((0, 5, 3), 2), ((1, 4, 3), 1)]
    if (s == (2, 5, 1)):
        return [((0, 5, 3), 2), ((7, 0, 1), 5), ((3, 5, 0), 1), ((2, 3, 3), 2)]
    if (s == (1, 4, 3)):
        return [((5, 0, 3), 4), ((0, 5, 3), 1), ((4, 4, 0), 3), ((1, 5, 2), 1)]
    if (s == (7, 0, 1)):
        return [((2, 5, 1), 5), ((5, 0, 3), 2), ((7, 1, 0), 1), ((8, 0, 0), 1)]
    if (s == (7, 1, 0)):
        return [((8, 0, 0), 1), ((3, 5, 0), 4), ((7, 0, 1), 1), ((4, 1, 3), 3)]
    if (s == (4, 1, 3)):
        return [((0, 5, 3), 4), ((5, 0, 3), 1), ((4, 4, 0), 3), ((7, 1, 0), 3)]
